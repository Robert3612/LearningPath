<?php

require_once __DIR__ . "/../vendor/autoload.php";

use srag\Plugins\LearningPath\ObjectSettings\ObjectSettings;
use srag\Plugins\LearningPath\Utils\LearningPathTrait;
use srag\DIC\LearningPath\DICTrait;

/**
 * Class ilObjLearningPath
 *
 * Generated by SrPluginGenerator v2.9.1
 *
 * @author Robert <support@fluxlabs.ch>
 * @author fluxlabs <support@fluxlabs.ch>
 */
class ilObjLearningPath extends ilObjectPlugina
{

    use DICTrait;
    use LearningPathTrait;

    const PLUGIN_CLASS_NAME = ilLearningPathPlugin::class;
    /**
     * @var ObjectSettings|null
     */
    protected $object_settings = null;


    /**
     * ilObjLearningPath constructor
     *
     * @param int $a_ref_id
     */
    public function __construct(/*int*/ $a_ref_id = 0)
    {
        parent::__construct($a_ref_id);
    }


    /**
     * @inheritDoc
     */
    public function doCreate() : void
    {
        $this->object_settings = self::learningPath()->objectSettings()->factory()->newInstance();

        $this->object_settings->setObjId($this->id);

        self::learningPath()->objectSettings()->storeObjectSettings($this->object_settings);
    }


    /**
     * @inheritDoc
     */
    public function doDelete() : void
    {
        if ($this->object_settings !== null) {
            self::learningPath()->objectSettings()->deleteObjectSettings($this->object_settings);
        }
    }


    /**
     * @inheritDoc
     */
    public function doRead() : void
    {
        $this->object_settings = self::learningPath()->objectSettings()->getObjectSettingsById(intval($this->id));
    }


    /**
     * @inheritDoc
     */
    public function doUpdate() : void
    {
        self::learningPath()->objectSettings()->storeObjectSettings($this->object_settings);
    }


    /**
     * @inheritDoc
     */
    public final function initType() : void
    {
        $this->setType(ilLearningPathPlugin::PLUGIN_ID);
    }


    /**
     * @return bool
     */
    public function isOnline() : bool
    {
        return $this->object_settings->isOnline();
    }


    /**
     * @param bool $is_online
     */
    public function setOnline(bool $is_online = true) : void
    {
        $this->object_settings->setOnline($is_online);
    }


    /**
     * @inheritDoc
     *
     * @param ilObjLearningPath $new_obj
     */
    protected function doCloneObject(/*ilObjLearningPath*/ $new_obj, /*int*/ $a_target_id, /*?int*/ $a_copy_id = null) : void
    {
        $new_obj->object_settings = self::learningPath()->objectSettings()->cloneObjectSettings($this->object_settings);

        $new_obj->object_settings->setObjId($new_obj->id);

        self::learningPath()->objectSettings()->storeObjectSettings($new_obj->object_settings);
    }
}
